name: PR Code Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  scan_js_files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Current Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Fetch last 2 commits for PR comparison

      - name: Run JavaScript Linter
        run: |
          node .github/scripts/checkFunctionNames.js || true
        continue-on-error: true  # Allows script to run without failing the entire workflow

      - name: Upload Comment Output
        if: success() || failure()  # Ensures upload happens even if the script fails
        uses: actions/upload-artifact@v3
        with:
          name: pr_comments
          path: comment_output.json  # ✅ Saves the output file locally

  comment_on_pr:
    needs: scan_js_files
    runs-on: ubuntu-latest
    steps:
      - name: Download Comment Output
        uses: actions/download-artifact@v3
        with:
          name: pr_comments  # ✅ Retrieves the saved file

      - name: Add PR Review Comments
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const issues = JSON.parse(fs.readFileSync('comment_output.json', 'utf8'));
            
            const pr = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            for (const issue of issues) {
              github.rest.pulls.createReviewComment({
                owner,
                repo,
                pull_number: pr,
                body: issue.message,
                commit_id: context.payload.pull_request.head.sha,
                path: issue.file,
                line: issue.line
              });
            }
